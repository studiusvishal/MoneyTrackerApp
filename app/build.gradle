plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    def envConfig
    flavorDimensions "default"
    productFlavors {
        local {
            envConfig = getProps('config/local.properties')
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
        }
        dev {
            envConfig = getProps('config/dev.properties')
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
        }
        prod {
            envConfig = getProps('config/prod.properties')
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
        }
    }

    compileSdk 31

    defaultConfig {
        applicationId "com.bhavsar.vishal.moneytrackerapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def stringKeyList = ['APP_NAME', 'VERSION_CODE', 'VERSION_NAME', 'APPLICATION_ID', 'SKIP_LOGIN', 'BASE_URL', 'USERNAME', 'PASSWORD']
        def intKeyList = ['CONNECT_TIMEOUT', 'READ_TIMEOUT', 'CURRENT_TIMEOUT', 'CURRENT_RETRY_COUNT']
        def boolKeyList = ['SKIP_LOGIN']

        rootProject.ext.config.each(p -> {
            def key = p.key, value = p.value
            if (intKeyList.contains(key)) {
                buildConfigField 'int', key, value
            } else if (boolKeyList.contains(key)) {
                buildConfigField 'boolean', key, value
            } else if (stringKeyList.contains(key)) {
                if (key == 'APP_NAME') {
                    resValue 'string', key.toLowerCase(), value.replace("\"", "")
                } else {
                    buildConfigField 'String', key, value
                }
            }
        })
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}